apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "transaction-service.fullname" . }}
  labels:
    {{- include "transaction-service.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "transaction-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "transaction-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "transaction-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: client-token
                  key: clientid
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: client-token
                  key: secret
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: client-token
                  key: dbpassword
            - name: DB_USER
              value: "{{ .Values.db.user }}"
            - name: DB_HOST
              value: "{{ .Values.db.host }}"
            - name: DB_PORT
              value: "{{ .Values.db.port }}"
            - name: DB_SCHEMA
              value: "{{ .Values.db.schema }}"
            - name: CBS_PROVIDER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.cbs.provider }}-{{ include "transaction-service.fullname" . }}
                  key: cbs_provider
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
